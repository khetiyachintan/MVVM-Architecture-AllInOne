apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    useLibrary 'org.apache.http.legacy'
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.chintankhetiya.mvvm.architectural"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
        }
    }
    androidExtensions {
        experimental = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    dataBinding {
        enabled = true
    }
    android {
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    androidExtensions {
        experimental = true
    }

    flavorDimensions 'default'

    productFlavors {
        UAT {
            versionCode 2
            versionName "UAT-1.0.1"
        }
        STAGE {
            versionCode 2
            versionName "Stage-1.0.1"
        }
        PROD {
            versionCode 2
            versionName "PROD-1.0.1"
        }

        /*Dynamic APK Naming Generation*/
        applicationVariants.all { variant ->
            variant.outputs.all {

                if (variant.name.contains("UAT")) {
                    outputFileName = "AASE_MVVM_v${variant.versionName}.apk"
                } else if (variant.name.contains("STAGE")) {
                    outputFileName = "AASE_MVVM_v${variant.versionName}.apk"
                } else if (variant.name.contains("PROD")) {
                    outputFileName = "AASE_MVVM_v${variant.versionName}.apk"
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    def roomVersion = '2.3.0'
    def archLifecycleVersion = '2.2.0'
    def coreTestingVersion = '2.1.0'
    def materialVersion = '1.3.0'
    def coroutines = '1.3.8'

    // Room components
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation 'org.conscrypt:conscrypt-android:2.2.1'

    // Kotlin components
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // Material design
    implementation "com.google.android.material:material:$materialVersion"

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    /*Retrofit & GSON Parsing*/
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'

    /*Shimmer Animation*/
    implementation 'com.github.sharish:ShimmerRecyclerView:v1.3'

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    /*Image Loading*/
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    /*Multidex to support 64K Function*/
    implementation 'androidx.multidex:multidex:2.0.1'

    /*Dexter - Runtime Permission Lib*/
    implementation 'com.karumi:dexter:6.1.2'

    kapt 'com.android.databinding:compiler:3.1.4'

    /*Viewmodel Life cycle and others*/
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    kapt "androidx.lifecycle:lifecycle-compiler:$archLifecycleVersion"

    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.1'

    /*Pull to refresh*/
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    testImplementation 'org.mockito:mockito-core:3.2.4'
    testImplementation 'org.mockito:mockito-inline:2.8.47'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'

    androidTestImplementation 'org.mockito:mockito-android:3.2.4'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
